{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environment/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ServiceService {\n  constructor(http) {\n    this.http = http;\n    this.hikesUrl = environment['url'] + '/hike/v1/hikes';\n    this.userUrl = environment['url'] + '/hiker/v1/users';\n    this.locationUrl = environment['url'] + '/location/v1/Locations';\n  }\n  getHikes(lat, lon, distance, difficulty) {\n    // Define the parameters\n    let params = new HttpParams().set('lat', String(lat)).set('lon', String(lon)).set('distance', String(distance)).set('difficulty', String(difficulty));\n    // Make the GET request and return the result\n    return this.http.get(this.hikesUrl, {\n      params: params\n    });\n  }\n  signIn(firstName, lastName) {\n    // Make the GET request and return the result\n    return this.http.get(this.userUrl + '/1');\n  }\n  getLocation() {\n    return this.http.get(this.locationUrl + '/2');\n  }\n  getWeather(lat, long) {\n    // Define the endpoint and the headers\n    let endpoint = endpoint;\n    return this.http.get(endpoint, {\n      headers: headers\n    });\n  }\n}\nServiceService.ɵfac = function ServiceService_Factory(t) {\n  return new (t || ServiceService)(i0.ɵɵinject(i1.HttpClient));\n};\nServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ServiceService,\n  factory: ServiceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAO,sBAAsB;AACxE,SAASC,WAAW,QAAQ,6BAA6B;;;AAMzD,OAAM,MAAOC,cAAc;EACzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAEhB,aAAQ,GAAGH,WAAW,CAAC,KAAK,CAAC,GAAG,gBAAgB;IAChD,YAAO,GAAGA,WAAW,CAAC,KAAK,CAAC,GAAG,iBAAiB;IAChD,gBAAW,GAAGA,WAAW,CAAC,KAAK,CAAC,GAAG,wBAAwB;EAJ5B;EAQvCI,QAAQ,CAACC,GAAW,EAAEC,GAAW,EAAEC,QAAgB,EAAEC,UAAkB;IACrE;IACA,IAAIC,MAAM,GAAG,IAAIV,UAAU,EAAE,CACxBW,GAAG,CAAC,KAAK,EAAEC,MAAM,CAACN,GAAG,CAAC,CAAC,CACvBK,GAAG,CAAC,KAAK,EAAEC,MAAM,CAACL,GAAG,CAAC,CAAC,CACvBI,GAAG,CAAC,UAAU,EAAEC,MAAM,CAACJ,QAAQ,CAAC,CAAC,CACjCG,GAAG,CAAC,YAAY,EAAEC,MAAM,CAACH,UAAU,CAAC,CAAC;IAE1C;IACA,OAAO,IAAI,CAACL,IAAI,CAACS,GAAG,CAAS,IAAI,CAACC,QAAQ,EAAE;MAAEJ,MAAM,EAAEA;IAAM,CAAE,CAAC;EACjE;EAEAK,MAAM,CAACC,SAAiB,EAAEC,QAAgB;IAExC;IACA,OAAO,IAAI,CAACb,IAAI,CAACS,GAAG,CAAM,IAAI,CAACK,OAAO,GAAG,IAAI,CAAC;EAChD;EAEAC,WAAW;IACT,OAAO,IAAI,CAACf,IAAI,CAACS,GAAG,CAAM,IAAI,CAACO,WAAW,GAAG,IAAI,CAAC;EACpD;EAEAC,UAAU,CAACf,GAAW,EAAEgB,IAAY;IAClC;IACA,IAAIC,QAAQ,GAAGA,QAAQ;IAEvB,OAAO,IAAI,CAACnB,IAAI,CAACS,GAAG,CAAMU,QAAQ,EAAE;MAAEC,OAAO,EAAEA;IAAO,CAAE,CAAC;EAC3D;;AApCWtB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAuB,SAAdvB,cAAc;EAAAwB,YAFb;AAAM","names":["HttpParams","environment","ServiceService","constructor","http","getHikes","lat","lon","distance","difficulty","params","set","String","get","hikesUrl","signIn","firstName","lastName","userUrl","getLocation","locationUrl","getWeather","long","endpoint","headers","factory","providedIn"],"sourceRoot":"","sources":["/Users/lucas/Documents/FRI/frontend/src/app/services/service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\nimport { environment } from 'src/environment/environment';\nimport { Hike } from '../models/Hike';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ServiceService {\n  constructor(private http: HttpClient) {}\n\n  private hikesUrl = environment['url'] + '/hike/v1/hikes';\n  private userUrl = environment['url'] + '/hiker/v1/users';\n  private locationUrl = environment['url'] + '/location/v1/Locations';\n\n\n\n  getHikes(lat: number, lon: number, distance: number, difficulty: number) {\n    // Define the parameters\n    let params = new HttpParams()\n        .set('lat', String(lat))\n        .set('lon', String(lon))\n        .set('distance', String(distance))\n        .set('difficulty', String(difficulty));\n\n    // Make the GET request and return the result\n    return this.http.get<Hike[]>(this.hikesUrl, { params: params });\n  }\n\n  signIn(firstName: string, lastName: string) {\n\n    // Make the GET request and return the result\n    return this.http.get<any>(this.userUrl + '/1');\n  }\n\n  getLocation() {\n    return this.http.get<any>(this.locationUrl + '/2');\n  }\n\n  getWeather(lat: number, long: number) {\n    // Define the endpoint and the headers\n    let endpoint = endpoint\n\n    return this.http.get<any>(endpoint, { headers: headers });\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}