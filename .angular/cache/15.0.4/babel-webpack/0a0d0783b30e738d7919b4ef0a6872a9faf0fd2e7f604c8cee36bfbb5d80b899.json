{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environment/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ServiceService {\n  constructor(http) {\n    this.http = http;\n    this.hikesUrl = environment['url'] + '/hike/v1/hikes';\n    this.userUrl = environment['url'] + '/hiker/v1/users';\n    this.locationUrl = environment['url'] + '/location/v1/Locations';\n  }\n  getHikes(lat, lon, distance, difficulty) {\n    // Define the parameters\n    let params = new HttpParams().set('lat', String(lat)).set('lon', String(lon)).set('distance', String(distance)).set('difficulty', String(difficulty));\n    // Make the GET request and return the result\n    return this.http.get(this.hikesUrl, {\n      params: params\n    });\n  }\n  signIn(firstName, lastName) {\n    // Define the parameters\n    let params = new HttpParams().set('firstName', String(firstName)).set('lastName', String(lastName)).set('age', String(18)).set('skill', String(12)).set('sex', String('m')).set('longtitude', String(15)).set('latitude', String(45));\n    // Make the GET request and return the result\n    return this.http.post(this.userUrl, {\n      params: params\n    });\n  }\n  getLocation() {\n    return this.http.get(this.locationUrl + '/2');\n  }\n}\nServiceService.ɵfac = function ServiceService_Factory(t) {\n  return new (t || ServiceService)(i0.ɵɵinject(i1.HttpClient));\n};\nServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ServiceService,\n  factory: ServiceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAoBA,UAAU,QAAO,sBAAsB;AAC3D,SAASC,WAAW,QAAQ,6BAA6B;;;AAMzD,OAAM,MAAOC,cAAc;EACzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAEhB,aAAQ,GAAGH,WAAW,CAAC,KAAK,CAAC,GAAG,gBAAgB;IAChD,YAAO,GAAGA,WAAW,CAAC,KAAK,CAAC,GAAG,iBAAiB;IAChD,gBAAW,GAAGA,WAAW,CAAC,KAAK,CAAC,GAAG,wBAAwB;EAJ5B;EAQvCI,QAAQ,CAACC,GAAW,EAAEC,GAAW,EAAEC,QAAgB,EAAEC,UAAkB;IACrE;IACA,IAAIC,MAAM,GAAG,IAAIV,UAAU,EAAE,CACxBW,GAAG,CAAC,KAAK,EAAEC,MAAM,CAACN,GAAG,CAAC,CAAC,CACvBK,GAAG,CAAC,KAAK,EAAEC,MAAM,CAACL,GAAG,CAAC,CAAC,CACvBI,GAAG,CAAC,UAAU,EAAEC,MAAM,CAACJ,QAAQ,CAAC,CAAC,CACjCG,GAAG,CAAC,YAAY,EAAEC,MAAM,CAACH,UAAU,CAAC,CAAC;IAE1C;IACA,OAAO,IAAI,CAACL,IAAI,CAACS,GAAG,CAAS,IAAI,CAACC,QAAQ,EAAE;MAAEJ,MAAM,EAAEA;IAAM,CAAE,CAAC;EACjE;EAEAK,MAAM,CAACC,SAAiB,EAAEC,QAAgB;IACxC;IACA,IAAIP,MAAM,GAAG,IAAIV,UAAU,EAAE,CACxBW,GAAG,CAAC,WAAW,EAAEC,MAAM,CAACI,SAAS,CAAC,CAAC,CACnCL,GAAG,CAAC,UAAU,EAAEC,MAAM,CAACK,QAAQ,CAAC,CAAC,CACjCN,GAAG,CAAC,KAAK,EAAEC,MAAM,CAAC,EAAE,CAAC,CAAC,CACtBD,GAAG,CAAC,OAAO,EAAEC,MAAM,CAAC,EAAE,CAAC,CAAC,CACxBD,GAAG,CAAC,KAAK,EAAEC,MAAM,CAAC,GAAG,CAAC,CAAC,CACvBD,GAAG,CAAC,YAAY,EAAEC,MAAM,CAAC,EAAE,CAAC,CAAC,CAC7BD,GAAG,CAAC,UAAU,EAAEC,MAAM,CAAC,EAAE,CAAC,CAAC;IAGhC;IACA,OAAO,IAAI,CAACR,IAAI,CAACc,IAAI,CAAM,IAAI,CAACC,OAAO,EAAE;MAAET,MAAM,EAAEA;IAAM,CAAE,CAAC;EAC9D;EAEAU,WAAW;IACT,OAAO,IAAI,CAAChB,IAAI,CAACS,GAAG,CAAM,IAAI,CAACQ,WAAW,GAAG,IAAI,CAAC;EACpD;;AAvCWnB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAoB,SAAdpB,cAAc;EAAAqB,YAFb;AAAM","names":["HttpParams","environment","ServiceService","constructor","http","getHikes","lat","lon","distance","difficulty","params","set","String","get","hikesUrl","signIn","firstName","lastName","post","userUrl","getLocation","locationUrl","factory","providedIn"],"sourceRoot":"","sources":["/Users/lucas/Documents/FRI/frontend/src/app/services/service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport { environment } from 'src/environment/environment';\nimport { Hike } from '../models/Hike';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ServiceService {\n  constructor(private http: HttpClient) {}\n\n  private hikesUrl = environment['url'] + '/hike/v1/hikes';\n  private userUrl = environment['url'] + '/hiker/v1/users';\n  private locationUrl = environment['url'] + '/location/v1/Locations';\n\n\n\n  getHikes(lat: number, lon: number, distance: number, difficulty: number) {\n    // Define the parameters\n    let params = new HttpParams()\n        .set('lat', String(lat))\n        .set('lon', String(lon))\n        .set('distance', String(distance))\n        .set('difficulty', String(difficulty));\n\n    // Make the GET request and return the result\n    return this.http.get<Hike[]>(this.hikesUrl, { params: params });\n  }\n\n  signIn(firstName: string, lastName: string) {\n    // Define the parameters\n    let params = new HttpParams()\n        .set('firstName', String(firstName))\n        .set('lastName', String(lastName))\n        .set('age', String(18))\n        .set('skill', String(12))\n        .set('sex', String('m'))\n        .set('longtitude', String(15))\n        .set('latitude', String(45))\n\n\n    // Make the GET request and return the result\n    return this.http.post<any>(this.userUrl, { params: params });\n  }\n\n  getLocation() {\n    return this.http.get<any>(this.locationUrl + '/2');\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}