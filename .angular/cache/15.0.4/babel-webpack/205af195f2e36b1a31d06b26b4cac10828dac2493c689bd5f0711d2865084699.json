{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction HikesComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const trail_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", trail_r1.name, \" \");\n  }\n}\nexport class HikesComponent {\n  constructor(http) {\n    this.http = http;\n    this.difficulty = 1;\n    this.latitude = 0;\n    this.longitude = 0;\n    this.maxDistance = 0;\n    this.trails = [];\n  }\n  onSubmit() {\n    this.http.get(`https://mapzs.pzs.si/api/search?trailTypes=1&difficulty=${this.difficulty}`).subscribe(data => {\n      console.log(data);\n      this.trails = data.tracks.map(track => {\n        // Assign random latitude and longitude values\n        const latitude = Math.random() * (46.8769 - 45.4215) + 45.4215;\n        const longitude = Math.random() * (16.6105 - 13.3753) + 13.3753;\n        return {\n          name: track.name,\n          difficulty: track.difficulty,\n          distance: track.distance,\n          duration: track.duration,\n          latitude: latitude,\n          longitude: longitude\n        };\n      }).filter(trail => {\n        // Calculate distance between user and trail location\n        const distance = this.calculateDistance(this.latitude, this.longitude, trail.latitude, trail.longitude);\n        return distance <= this.maxDistance;\n      });\n    });\n  }\n  calculateDistance(lat1, lon1, lat2, lon2) {\n    const R = 6371; // Radius of the Earth in kilometers\n    const dLat = this.degreesToRadians(lat2 - lat1);\n    const dLon = this.degreesToRadians(lon2 - lon1);\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(this.degreesToRadians(lat1)) * Math.cos(this.degreesToRadians(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    const distance = R * c; // Distance in kilometers\n    return distance;\n  }\n  degreesToRadians(degrees) {\n    return degrees * (Math.PI / 180);\n  }\n}\nHikesComponent.ɵfac = function HikesComponent_Factory(t) {\n  return new (t || HikesComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nHikesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HikesComponent,\n  selectors: [[\"app-hikes\"]],\n  decls: 28,\n  vars: 5,\n  consts: [[1, \"left\"], [1, \"form-horizontal\", 3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"difficulty\", 1, \"col-sm-2\", \"control-label\"], [1, \"col-sm-10\"], [\"type\", \"number\", \"id\", \"difficulty\", \"name\", \"difficulty\", \"min\", \"1\", \"max\", \"4\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"latitude\", 1, \"col-sm-2\", \"control-label\"], [\"type\", \"number\", \"id\", \"latitude\", \"name\", \"latitude\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"longitude\", 1, \"col-sm-2\", \"control-label\"], [\"type\", \"number\", \"id\", \"longitude\", \"name\", \"longitude\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"maxDistance\", 1, \"col-sm-2\", \"control-label\"], [\"type\", \"number\", \"id\", \"maxDistance\", \"name\", \"maxDistance\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col-sm-offset-2\", \"col-sm-10\"], [\"type\", \"submit\", \"value\", \"Search\", 1, \"btn\", \"btn-primary\"], [1, \"right\"], [\"class\", \"well\", 4, \"ngFor\", \"ngForOf\"], [1, \"well\"]],\n  template: function HikesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"div\", 0)(2, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function HikesComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"label\", 3);\n      i0.ɵɵtext(5, \"Difficulty:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 4)(7, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function HikesComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.difficulty = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 6);\n      i0.ɵɵtext(10, \"Latitude:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 4)(12, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function HikesComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.latitude = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(13, \"div\", 2)(14, \"label\", 8);\n      i0.ɵɵtext(15, \"Longitude:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 4)(17, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function HikesComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.longitude = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(18, \"div\", 2)(19, \"label\", 10);\n      i0.ɵɵtext(20, \"Max Distance:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"div\", 4)(22, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function HikesComponent_Template_input_ngModelChange_22_listener($event) {\n        return ctx.maxDistance = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(23, \"div\", 2)(24, \"div\", 12);\n      i0.ɵɵelement(25, \"input\", 13);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(26, \"div\", 14);\n      i0.ɵɵtemplate(27, HikesComponent_div_27_Template, 2, 1, \"div\", 15);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.difficulty);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.latitude);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.longitude);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.maxDistance);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.trails);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.MinValidator, i3.MaxValidator, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","HikesComponent","constructor","http","onSubmit","get","difficulty","subscribe","data","console","log","trails","tracks","map","track","latitude","Math","random","longitude","name","distance","duration","filter","trail","calculateDistance","maxDistance","lat1","lon1","lat2","lon2","R","dLat","degreesToRadians","dLon","a","sin","cos","c","atan2","sqrt","degrees","PI","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/lucas/Documents/FRI/frontend/src/app/components/hikes/hikes.component.html","/Users/lucas/Documents/FRI/frontend/src/app/components/hikes/hikes.component.ts"],"sourcesContent":["<div>\n    <div class=\"left\">\n        <form (ngSubmit)=\"onSubmit()\" class=\"form-horizontal\">\n            <div class=\"form-group\">\n                <label for=\"difficulty\" class=\"col-sm-2 control-label\">Difficulty:</label>\n                <div class=\"col-sm-10\">\n                    <input type=\"number\" class=\"form-control\" id=\"difficulty\" name=\"difficulty\" min=\"1\" max=\"4\" [(ngModel)]=\"difficulty\">\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"latitude\" class=\"col-sm-2 control-label\">Latitude:</label>\n                <div class=\"col-sm-10\">\n                    <input type=\"number\" class=\"form-control\" id=\"latitude\" name=\"latitude\" [(ngModel)]=\"latitude\">\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"longitude\" class=\"col-sm-2 control-label\">Longitude:</label>\n                <div class=\"col-sm-10\">\n                    <input type=\"number\" class=\"form-control\" id=\"longitude\" name=\"longitude\" [(ngModel)]=\"longitude\">\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"maxDistance\" class=\"col-sm-2 control-label\">Max Distance:</label>\n                <div class=\"col-sm-10\">\n                    <input type=\"number\" class=\"form-control\" id=\"maxDistance\" name=\"maxDistance\" [(ngModel)]=\"maxDistance\">\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <div class=\"col-sm-offset-2 col-sm-10\">\n                    <input type=\"submit\" class=\"btn btn-primary\" value=\"Search\">\n                </div>\n            </div>\n        </form>\n    </div>\n    <div class=\"right\">\n        <div *ngFor=\"let trail of trails\" class=\"well\">\n            {{ trail.name }}\n        </div>\n    </div>\n</div>","import { Component } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\ninterface HikingTrail {\n  name: string;\n  difficulty: number;\n  distance: number;\n  duration: number;\n  latitude: number;\n  longitude: number;\n}\n\ninterface ApiTrack {\n  name: string;\n  difficulty: number;\n  distance: number;\n  duration: number;\n}\n\n@Component({\n  selector: 'app-hikes',\n  templateUrl: './hikes.component.html',\n  styleUrls: ['./hikes.component.css']\n})\nexport class HikesComponent {\n  difficulty = 1;\n  latitude = 0;\n  longitude = 0;\n  maxDistance = 0;\n  trails: HikingTrail[] = [];\n\n  constructor(private http: HttpClient) {}\n\n  onSubmit(): void {\n    this.http.get<{tracks: ApiTrack[]}>(`https://mapzs.pzs.si/api/search?trailTypes=1&difficulty=${this.difficulty}`)\n        .subscribe(data => {\n          console.log(data)\n          this.trails = data.tracks.map((track: ApiTrack) => {\n            // Assign random latitude and longitude values\n            const latitude = Math.random() * (46.8769 - 45.4215) + 45.4215;\n            const longitude = Math.random() * (16.6105 - 13.3753) + 13.3753;\n            return {\n              name: track.name,\n              difficulty: track.difficulty,\n              distance: track.distance,\n              duration: track.duration,\n              latitude: latitude,\n              longitude: longitude\n            };\n          })\n              .filter((trail: HikingTrail) => {\n                // Calculate distance between user and trail location\n                const distance = this.calculateDistance(this.latitude, this.longitude, trail.latitude, trail.longitude);\n                return distance <= this.maxDistance;\n              });\n        });\n  }\n\n  calculateDistance(lat1:number, lon1:number, lat2:number, lon2:number) {\n    const R = 6371; // Radius of the Earth in kilometers\n    const dLat = this.degreesToRadians(lat2 - lat1);\n    const dLon = this.degreesToRadians(lon2 - lon1);\n\n    const a =\n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.cos(this.degreesToRadians(lat1)) * Math.cos(this.degreesToRadians(lat2)) *\n        Math.sin(dLon / 2) * Math.sin(dLon / 2)\n    ;\n\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    const distance = R * c; // Distance in kilometers\n\n    return distance;\n  }\n\n  degreesToRadians(degrees:number) {\n    return degrees * (Math.PI / 180);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}