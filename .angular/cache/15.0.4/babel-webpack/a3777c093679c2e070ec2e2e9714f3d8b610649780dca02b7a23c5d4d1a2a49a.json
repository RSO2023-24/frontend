{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction HikesComponent_div_29_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 31)(1, \"div\", 32);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 33)(4, \"ul\", 34)(5, \"li\", 35);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"li\", 35);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"li\", 35);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"li\", 35);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"li\", 35);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"button\", 36);\n    i0.ɵɵlistener(\"click\", function HikesComponent_div_29_div_1_Template_button_click_15_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const trail_r4 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.getWeather(trail_r4));\n    });\n    i0.ɵɵtext(16, \" Weather \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const trail_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", trail_r4.name, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"Difficulty: \", trail_r4.difficulty, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Distance: \", trail_r4.distance, \" km\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Duration: \", trail_r4.duration, \" min\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Latitude: \", trail_r4.latitude, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Longitude: \", trail_r4.longitude, \"\");\n  }\n}\nfunction HikesComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵtemplate(1, HikesComponent_div_29_div_1_Template, 17, 6, \"div\", 30);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.trails);\n  }\n}\nfunction HikesComponent_div_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 37)(1, \"span\", 38);\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction HikesComponent_table_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 39)(1, \"tbody\")(2, \"tr\")(3, \"th\", 40);\n    i0.ɵɵtext(4, \"Temperature\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"tr\")(8, \"th\", 40);\n    i0.ɵɵtext(9, \"Humidity\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"tr\")(13, \"th\", 40);\n    i0.ɵɵtext(14, \"Wind\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"tr\")(18, \"th\", 40);\n    i0.ɵɵtext(19, \"Clouds\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"td\");\n    i0.ɵɵtext(21);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r2.weather.temperature, \" \\u00B0C\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r2.weather.humidity, \" %\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r2.weather.wind, \" km/h\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r2.weather.clouds);\n  }\n}\nexport class HikesComponent {\n  constructor(http) {\n    this.http = http;\n    this.difficulty = 1;\n    this.latitude = 0;\n    this.longitude = 0;\n    this.maxDistance = 0;\n    this.trails = [];\n    this.loading = false; // The loading state of the modal\n  }\n\n  onSubmit() {\n    this.http.get(`https://mapzs.pzs.si/api/search?trailTypes=1&difficulty=${this.difficulty}`).subscribe(data => {\n      console.log(data);\n      this.trails = data.tracks.map(track => {\n        // Assign random latitude and longitude values\n        const latitude = Math.random() * (46.8769 - 45.4215) + 45.4215;\n        const longitude = Math.random() * (16.6105 - 13.3753) + 13.3753;\n        return {\n          name: track.name,\n          difficulty: track.difficulty,\n          distance: track.distance,\n          duration: track.duration,\n          latitude: latitude,\n          longitude: longitude\n        };\n      }).filter(trail => {\n        // Calculate distance between user and trail location\n        const distance = this.calculateDistance(this.latitude, this.longitude, trail.latitude, trail.longitude);\n        return distance <= this.maxDistance;\n      });\n    });\n  }\n  calculateDistance(lat1, lon1, lat2, lon2) {\n    const R = 6371; // Radius of the Earth in kilometers\n    const dLat = this.degreesToRadians(lat2 - lat1);\n    const dLon = this.degreesToRadians(lon2 - lon1);\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(this.degreesToRadians(lat1)) * Math.cos(this.degreesToRadians(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    const distance = R * c; // Distance in kilometers\n    return distance;\n  }\n  degreesToRadians(degrees) {\n    return degrees * (Math.PI / 180);\n  }\n}\nHikesComponent.ɵfac = function HikesComponent_Factory(t) {\n  return new (t || HikesComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nHikesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HikesComponent,\n  selectors: [[\"app-hikes\"]],\n  decls: 45,\n  vars: 8,\n  consts: [[1, \"wrapper\"], [1, \"left\"], [1, \"form-horizontal\", 3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"difficulty\", 1, \"col-sm-2\", \"control-label\"], [1, \"col-sm-10\"], [\"type\", \"number\", \"id\", \"difficulty\", \"name\", \"difficulty\", \"min\", \"1\", \"max\", \"4\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"latitude\", 1, \"col-sm-2\", \"control-label\"], [\"type\", \"number\", \"id\", \"latitude\", \"name\", \"latitude\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"longitude\", 1, \"col-sm-2\", \"control-label\"], [\"type\", \"number\", \"id\", \"longitude\", \"name\", \"longitude\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"maxDistance\", 1, \"col-sm-2\", \"control-label\"], [\"type\", \"number\", \"id\", \"maxDistance\", \"name\", \"maxDistance\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col-sm-offset-2\", \"col-sm-10\"], [\"type\", \"submit\", \"value\", \"Search\", 1, \"btn\", \"btn-primary\"], [\"value\", \"Get current location\", 1, \"btn\", \"btn-primary\"], [\"class\", \"right\", 4, \"ngIf\"], [\"id\", \"weatherModal\", \"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-labelledby\", \"weatherModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [\"role\", \"document\", 1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"weatherModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"close\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\"], [\"class\", \"spinner-border\", \"role\", \"status\", 4, \"ngIf\"], [\"class\", \"table\", 4, \"ngIf\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", 1, \"btn\", \"btn-primary\"], [1, \"right\"], [\"class\", \"card mb-3\", 4, \"ngFor\", \"ngForOf\"], [1, \"card\", \"mb-3\"], [1, \"card-header\", \"bg-primary\", \"text-white\"], [1, \"card-body\"], [1, \"list-group\", \"list-group-flush\"], [1, \"list-group-item\"], [\"type\", \"button\", \"data-toggle\", \"modal\", \"data-target\", \"#weatherModal\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"role\", \"status\", 1, \"spinner-border\"], [1, \"sr-only\"], [1, \"table\"], [\"scope\", \"row\"]],\n  template: function HikesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function HikesComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"div\", 3)(4, \"label\", 4);\n      i0.ɵɵtext(5, \"Difficulty:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 5)(7, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function HikesComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.difficulty = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(8, \"div\", 3)(9, \"label\", 7);\n      i0.ɵɵtext(10, \"Latitude:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 5)(12, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function HikesComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.latitude = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(13, \"div\", 3)(14, \"label\", 9);\n      i0.ɵɵtext(15, \"Longitude:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 5)(17, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function HikesComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.longitude = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(18, \"div\", 3)(19, \"label\", 11);\n      i0.ɵɵtext(20, \"Distance (km):\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"div\", 5)(22, \"input\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function HikesComponent_Template_input_ngModelChange_22_listener($event) {\n        return ctx.maxDistance = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(23, \"div\", 3)(24, \"div\", 13);\n      i0.ɵɵelement(25, \"input\", 14);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"div\", 3)(27, \"div\", 13);\n      i0.ɵɵelement(28, \"input\", 15);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵtemplate(29, HikesComponent_div_29_Template, 2, 1, \"div\", 16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"div\", 17)(31, \"div\", 18)(32, \"div\", 19)(33, \"div\", 20)(34, \"h5\", 21);\n      i0.ɵɵtext(35);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"button\", 22)(37, \"span\", 23);\n      i0.ɵɵtext(38, \"\\u00D7\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(39, \"div\", 24);\n      i0.ɵɵtemplate(40, HikesComponent_div_40_Template, 3, 0, \"div\", 25);\n      i0.ɵɵtemplate(41, HikesComponent_table_41_Template, 22, 4, \"table\", 26);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(42, \"div\", 27)(43, \"button\", 28);\n      i0.ɵɵtext(44, \"Close\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.difficulty);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.latitude);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.longitude);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.maxDistance);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.trails.length != 0);\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate1(\"Weather for \", ctx.selectedTrail.name, \"\");\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.loading && ctx.weather);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.MinValidator, i3.MaxValidator, i3.NgModel, i3.NgForm],\n  styles: [\".wrapper[_ngcontent-%COMP%] {\\n    margin-top: 200px;\\n    display: flex;\\n    height: 80vh;\\n    justify-content: space-around;\\n    width: 100vw;\\n}\\n\\n.left[_ngcontent-%COMP%] {\\n    background-color: lightblue;\\n    border-radius: 15px;\\n    padding: 15px;\\n    height: -moz-fit-content;\\n    height: fit-content;\\n    width: 300px;\\n\\n}\\n\\n.right[_ngcontent-%COMP%] {\\n    background-color: lightblue;\\n    border-radius: 15px;\\n    padding: 15px;\\n    width: 70%;\\n    overflow-y: scroll;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9oaWtlcy9oaWtlcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksaUJBQWlCO0lBQ2pCLGFBQWE7SUFDYixZQUFZO0lBQ1osNkJBQTZCO0lBQzdCLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSwyQkFBMkI7SUFDM0IsbUJBQW1CO0lBQ25CLGFBQWE7SUFDYix3QkFBbUI7SUFBbkIsbUJBQW1CO0lBQ25CLFlBQVk7O0FBRWhCOztBQUVBO0lBQ0ksMkJBQTJCO0lBQzNCLG1CQUFtQjtJQUNuQixhQUFhO0lBQ2IsVUFBVTtJQUNWLGtCQUFrQjtBQUN0QiIsInNvdXJjZXNDb250ZW50IjpbIi53cmFwcGVyIHtcbiAgICBtYXJnaW4tdG9wOiAyMDBweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGhlaWdodDogODB2aDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbiAgICB3aWR0aDogMTAwdnc7XG59XG5cbi5sZWZ0IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGJsdWU7XG4gICAgYm9yZGVyLXJhZGl1czogMTVweDtcbiAgICBwYWRkaW5nOiAxNXB4O1xuICAgIGhlaWdodDogZml0LWNvbnRlbnQ7XG4gICAgd2lkdGg6IDMwMHB4O1xuXG59XG5cbi5yaWdodCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRibHVlO1xuICAgIGJvcmRlci1yYWRpdXM6IDE1cHg7XG4gICAgcGFkZGluZzogMTVweDtcbiAgICB3aWR0aDogNzAlO1xuICAgIG92ZXJmbG93LXk6IHNjcm9sbDtcbn1cblxuXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","HikesComponent","constructor","http","onSubmit","get","difficulty","subscribe","data","console","log","trails","tracks","map","track","latitude","Math","random","longitude","name","distance","duration","filter","trail","calculateDistance","maxDistance","lat1","lon1","lat2","lon2","R","dLat","degreesToRadians","dLon","a","sin","cos","c","atan2","sqrt","degrees","PI","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/lucas/Documents/FRI/frontend/src/app/components/hikes/hikes.component.html","/Users/lucas/Documents/FRI/frontend/src/app/components/hikes/hikes.component.ts"],"sourcesContent":["<div class=\"wrapper\">\n    <div class=\"left\">\n        <form (ngSubmit)=\"onSubmit()\" class=\"form-horizontal\">\n            <div class=\"form-group\">\n                <label for=\"difficulty\" class=\"col-sm-2 control-label\">Difficulty:</label>\n                <div class=\"col-sm-10\">\n                    <input type=\"number\" class=\"form-control\" id=\"difficulty\" name=\"difficulty\" min=\"1\" max=\"4\" [(ngModel)]=\"difficulty\">\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"latitude\" class=\"col-sm-2 control-label\">Latitude:</label>\n                <div class=\"col-sm-10\">\n                    <input type=\"number\" class=\"form-control\" id=\"latitude\" name=\"latitude\" [(ngModel)]=\"latitude\">\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"longitude\" class=\"col-sm-2 control-label\">Longitude:</label>\n                <div class=\"col-sm-10\">\n                    <input type=\"number\" class=\"form-control\" id=\"longitude\" name=\"longitude\" [(ngModel)]=\"longitude\">\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"maxDistance\" class=\"col-sm-2 control-label\">Distance (km):</label>\n                <div class=\"col-sm-10\">\n                    <input type=\"number\" class=\"form-control\" id=\"maxDistance\" name=\"maxDistance\" [(ngModel)]=\"maxDistance\">\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <div class=\"col-sm-offset-2 col-sm-10\">\n                    <input type=\"submit\" class=\"btn btn-primary\" value=\"Search\">\n                </div>\n            </div>\n\n            <div class=\"form-group\">\n                <div class=\"col-sm-offset-2 col-sm-10\">\n                    <input class=\"btn btn-primary\" value=\"Get current location\">\n                </div>\n            </div>\n        </form>\n    </div>\n    <div class=\"right\" *ngIf=\"trails.length != 0\">\n        <!-- Use a card component for each trail -->\n        <div *ngFor=\"let trail of trails\" class=\"card mb-3\">\n            <!-- Use a card header for the trail name -->\n            <div class=\"card-header bg-primary text-white\">\n                {{ trail.name }}\n            </div>\n            <!-- Use a card body for the trail details -->\n            <div class=\"card-body\">\n                <!-- Use a list group for the trail attributes -->\n                <ul class=\"list-group list-group-flush\">\n                    <li class=\"list-group-item\">Difficulty: {{ trail.difficulty }}</li>\n                    <li class=\"list-group-item\">Distance: {{ trail.distance }} km</li>\n                    <li class=\"list-group-item\">Duration: {{ trail.duration }} min</li>\n                    <li class=\"list-group-item\">Latitude: {{ trail.latitude }}</li>\n                    <li class=\"list-group-item\">Longitude: {{ trail.longitude }}</li>\n                </ul>\n                <!-- Use a button to open a modal for the weather -->\n                <button type=\"button\" class=\"btn btn-secondary\" data-toggle=\"modal\" data-target=\"#weatherModal\" (click)=\"getWeather(trail)\">\n                    Weather\n                </button>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!-- Use a modal component for the weather -->\n<div class=\"modal fade\" id=\"weatherModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"weatherModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <!-- Use a modal header for the title -->\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\" id=\"weatherModalLabel\">Weather for {{ selectedTrail.name }}</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <!-- Use a modal body for the weather details -->\n            <div class=\"modal-body\">\n                <!-- Use a spinner for loading -->\n                <div class=\"spinner-border\" role=\"status\" *ngIf=\"loading\">\n                    <span class=\"sr-only\">Loading...</span>\n                </div>\n                <!-- Use a table for the weather data -->\n                <table class=\"table\" *ngIf=\"!loading && weather\">\n                    <tbody>\n                    <tr>\n                        <th scope=\"row\">Temperature</th>\n                        <td>{{ weather.temperature }} °C</td>\n                    </tr>\n                    <tr>\n                        <th scope=\"row\">Humidity</th>\n                        <td>{{ weather.humidity }} %</td>\n                    </tr>\n                    <tr>\n                        <th scope=\"row\">Wind</th>\n                        <td>{{ weather.wind }} km/h</td>\n                    </tr>\n                    <tr>\n                        <th scope=\"row\">Clouds</th>\n                        <td>{{ weather.clouds }}</td>\n                    </tr>\n                    </tbody>\n                </table>\n            </div>\n            <!-- Use a modal footer for the close button -->\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\">Close</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\ninterface HikingTrail {\n  name: string;\n  difficulty: number;\n  distance: number;\n  duration: number;\n  latitude: number;\n  longitude: number;\n}\n\ninterface ApiTrack {\n  name: string;\n  difficulty: number;\n  distance: number;\n  duration: number;\n}\n\ninterface Weather {\n  temperature: number;\n  humidity: number;\n  wind: number;\n  clouds: string;\n}\n\n@Component({\n  selector: 'app-hikes',\n  templateUrl: './hikes.component.html',\n  styleUrls: ['./hikes.component.css']\n})\nexport class HikesComponent {\n  difficulty = 1;\n  latitude = 0;\n  longitude = 0;\n  maxDistance = 0;\n  trails: HikingTrail[] = [];\n  selectedTrail?: HikingTrail; // The trail selected by the user\n  weather?: Weather; // The weather data for the selected trail\n  loading: boolean = false; // The loading state of the modal\n\n  constructor(private http: HttpClient) {}\n\n  onSubmit(): void {\n    this.http.get<{tracks: ApiTrack[]}>(`https://mapzs.pzs.si/api/search?trailTypes=1&difficulty=${this.difficulty}`)\n        .subscribe(data => {\n          console.log(data)\n          this.trails = data.tracks.map((track: ApiTrack) => {\n            // Assign random latitude and longitude values\n            const latitude = Math.random() * (46.8769 - 45.4215) + 45.4215;\n            const longitude = Math.random() * (16.6105 - 13.3753) + 13.3753;\n            return {\n              name: track.name,\n              difficulty: track.difficulty,\n              distance: track.distance,\n              duration: track.duration,\n              latitude: latitude,\n              longitude: longitude\n            };\n          })\n              .filter((trail: HikingTrail) => {\n                // Calculate distance between user and trail location\n                const distance = this.calculateDistance(this.latitude, this.longitude, trail.latitude, trail.longitude);\n                return distance <= this.maxDistance;\n              });\n        });\n  }\n\n  calculateDistance(lat1:number, lon1:number, lat2:number, lon2:number) {\n    const R = 6371; // Radius of the Earth in kilometers\n    const dLat = this.degreesToRadians(lat2 - lat1);\n    const dLon = this.degreesToRadians(lon2 - lon1);\n\n    const a =\n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.cos(this.degreesToRadians(lat1)) * Math.cos(this.degreesToRadians(lat2)) *\n        Math.sin(dLon / 2) * Math.sin(dLon / 2)\n    ;\n\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    const distance = R * c; // Distance in kilometers\n\n    return distance;\n  }\n\n  degreesToRadians(degrees:number) {\n    return degrees * (Math.PI / 180);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}