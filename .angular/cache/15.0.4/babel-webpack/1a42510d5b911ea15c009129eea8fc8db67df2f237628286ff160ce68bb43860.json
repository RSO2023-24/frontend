{"ast":null,"code":"import { faCloudSun } from \"@fortawesome/free-solid-svg-icons/faCloudSun\";\nimport { faLocationDot } from \"@fortawesome/free-solid-svg-icons/faLocationDot\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../../services/service.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@fortawesome/angular-fontawesome\";\nimport * as i5 from \"@angular/forms\";\nfunction HikesComponent_option_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 30);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const location_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", location_r4.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(location_r4.name);\n  }\n}\nfunction HikesComponent_div_53_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"label\", 31)(2, \"b\");\n    i0.ɵɵtext(3, \"Distance:\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\", 5)(5, \"input\", 32);\n    i0.ɵɵlistener(\"ngModelChange\", function HikesComponent_div_53_Template_input_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.maxDistance = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"span\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.maxDistance);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.temperature, \" C\");\n  }\n}\nfunction HikesComponent_div_62_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 35)(1, \"div\", 36);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 37)(4, \"ul\", 38)(5, \"li\", 39)(6, \"b\");\n    i0.ɵɵtext(7, \"Difficulty:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"li\", 39)(10, \"b\");\n    i0.ɵɵtext(11, \"Trail distance:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"li\", 39)(14, \"b\");\n    i0.ɵɵtext(15, \"Duration:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"button\", 40);\n    i0.ɵɵlistener(\"click\", function HikesComponent_div_62_div_1_Template_button_click_17_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const trail_r8 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r9.getWeather(trail_r8));\n    });\n    i0.ɵɵelement(18, \"fa-icon\", 27);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const trail_r8 = ctx.$implicit;\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", trail_r8.name, \" \");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r7.getDifficultyLabel(trail_r8.difficulty), \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", trail_r8.length, \" m\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", trail_r8.duration, \" min\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"icon\", ctx_r7.faCloud);\n  }\n}\nfunction HikesComponent_div_62_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtemplate(1, HikesComponent_div_62_div_1_Template, 19, 5, \"div\", 34);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.trails);\n  }\n}\nfunction HikesComponent_div_63_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 49)(1, \"span\", 50);\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction HikesComponent_div_63_table_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 51)(1, \"tbody\")(2, \"tr\")(3, \"th\", 52);\n    i0.ɵɵtext(4, \"Temperature\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r12.temperature, \" \\u00B0C\");\n  }\n}\nfunction HikesComponent_div_63_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 41)(1, \"div\", 42)(2, \"div\", 43)(3, \"div\", 44);\n    i0.ɵɵtemplate(4, HikesComponent_div_63_div_4_Template, 3, 0, \"div\", 45);\n    i0.ɵɵtemplate(5, HikesComponent_div_63_table_5_Template, 7, 1, \"table\", 46);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 47)(7, \"button\", 48);\n    i0.ɵɵtext(8, \"Close\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.loading);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.temperature);\n  }\n}\nexport class HikesComponent {\n  constructor(http, service) {\n    this.http = http;\n    this.service = service;\n    this.faCloud = faCloudSun;\n    this.faMapMarker = faLocationDot;\n    this.difficulty = 1;\n    this.latitude = 0;\n    this.longitude = 0;\n    this.maxDistance = 0;\n    this.trails = [];\n    this.loading = false;\n    this.locations = [];\n  }\n  ngOnInit() {\n    this.service.getLocations().subscribe(res => this.locations = res);\n  }\n  onSubmit() {\n    this.service.getHikes(this.latitude, this.longitude, this.maxDistance, this.difficulty).subscribe(hikes => {\n      this.trails = hikes;\n    });\n  }\n  getWeather(trail) {\n    this.service.getWeather(trail.startingLatitude, trail.startingLongitude).subscribe(res => {\n      this.loading = true;\n      this.temperature = res.current.temperature_2m;\n      this.loading = false;\n    });\n  }\n  getDifficultyLabel(difficulty) {\n    switch (difficulty) {\n      case 1:\n        return 'Easy';\n      case 2:\n        return 'Medium';\n      case 3:\n        return 'Hard';\n      case 4:\n        return 'Extreme';\n      default:\n        return 'Unknown';\n    }\n  }\n  getLocation() {\n    this.service.getLocations().subscribe(res => {\n      console.log(res);\n    });\n  }\n  onSelect($event) {\n    let selected = this.locations.find(location => location.id === Number($event));\n    if (selected) {\n      this.longitude = selected.longtitude;\n      this.latitude = selected.latitude;\n    }\n  }\n}\nHikesComponent.ɵfac = function HikesComponent_Factory(t) {\n  return new (t || HikesComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.ServiceService));\n};\nHikesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HikesComponent,\n  selectors: [[\"app-hikes\"]],\n  decls: 64,\n  vars: 14,\n  consts: [[1, \"wrapper\"], [1, \"left\"], [1, \"form-horizontal\", 3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"difficulty\", 1, \"col-sm-2\", \"control-label\"], [1, \"col-sm-10\"], [1, \"radio\"], [\"type\", \"radio\", \"name\", \"difficulty\", \"value\", \"1\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"radio\", \"name\", \"difficulty\", \"value\", \"2\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"radio\", \"name\", \"difficulty\", \"value\", \"3\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"radio\", \"name\", \"difficulty\", \"value\", \"4\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"pointOfInterest\", 1, \"col-sm-2\", \"control-label\"], [\"id\", \"pointOfInterest\", \"name\", \"pointOfInterest\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"\", \"disabled\", \"\", \"selected\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"latitude\", 1, \"col-sm-2\", \"control-label\"], [\"type\", \"number\", \"id\", \"latitude\", \"name\", \"latitude\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"longitude\", 1, \"col-sm-2\", \"control-label\"], [\"type\", \"number\", \"id\", \"longitude\", \"name\", \"longitude\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"maxDistance\", 1, \"col-sm-2\", \"control-label\"], [\"type\", \"range\", \"id\", \"maxDistance\", \"name\", \"maxDistance\", \"min\", \"1\", \"max\", \"100\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"form-group\", 4, \"ngIf\"], [1, \"col-sm-12\"], [1, \"row\"], [1, \"col-sm-6\"], [\"type\", \"submit\", \"value\", \"Search\", 1, \"btn\", \"btn-primary\", 2, \"width\", \"100%\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 2, \"margin-left\", \"0\", 3, \"click\"], [3, \"icon\"], [\"class\", \"right\", 4, \"ngIf\"], [\"class\", \"modal fade\", \"id\", \"weatherModal\", \"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-labelledby\", \"weatherModalLabel\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [3, \"value\"], [\"for\", \"temperature\", 1, \"col-sm-2\", \"control-label\"], [\"type\", \"range\", \"id\", \"temperature\", \"name\", \"temperature\", \"min\", \"1\", \"max\", \"100\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"right\"], [\"class\", \"card mb-3\", 4, \"ngFor\", \"ngForOf\"], [1, \"card\", \"mb-3\"], [1, \"card-header\", \"bg-primary\", \"text-white\"], [1, \"card-body\"], [1, \"list-group\", \"list-group-flush\", 2, \"padding-bottom\", \"10px\"], [1, \"list-group-item\"], [\"type\", \"button\", \"data-toggle\", \"modal\", \"data-target\", \"#weatherModal\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"id\", \"weatherModal\", \"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-labelledby\", \"weatherModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [\"role\", \"document\", 1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-body\"], [\"class\", \"spinner-border\", \"role\", \"status\", 4, \"ngIf\"], [\"class\", \"table\", 4, \"ngIf\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", 1, \"btn\", \"btn-primary\"], [\"role\", \"status\", 1, \"spinner-border\"], [1, \"sr-only\"], [1, \"table\"], [\"scope\", \"row\"]],\n  template: function HikesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function HikesComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"div\", 3)(4, \"label\", 4)(5, \"b\");\n      i0.ɵɵtext(6, \"Difficulty:\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 5)(8, \"div\", 6)(9, \"label\")(10, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function HikesComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.difficulty = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(11, \" Easy\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 6)(13, \"label\")(14, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function HikesComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.difficulty = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(15, \" Medium\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 6)(17, \"label\")(18, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function HikesComponent_Template_input_ngModelChange_18_listener($event) {\n        return ctx.difficulty = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(19, \" Hard\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"div\", 6)(21, \"label\")(22, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function HikesComponent_Template_input_ngModelChange_22_listener($event) {\n        return ctx.difficulty = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(23, \" Extreme\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(24, \"div\", 3)(25, \"label\", 11)(26, \"b\");\n      i0.ɵɵtext(27, \"Locations:\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(28, \"div\", 5)(29, \"select\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function HikesComponent_Template_select_ngModelChange_29_listener($event) {\n        return ctx.onSelect($event);\n      })(\"ngModelChange\", function HikesComponent_Template_select_ngModelChange_29_listener($event) {\n        return ctx.selectedLocationId = $event;\n      });\n      i0.ɵɵelementStart(30, \"option\", 13);\n      i0.ɵɵtext(31, \"Select\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(32, HikesComponent_option_32_Template, 2, 2, \"option\", 14);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(33, \"div\", 3)(34, \"label\", 15)(35, \"b\");\n      i0.ɵɵtext(36, \"Latitude:\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(37, \"div\", 5)(38, \"input\", 16);\n      i0.ɵɵlistener(\"ngModelChange\", function HikesComponent_Template_input_ngModelChange_38_listener($event) {\n        return ctx.latitude = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(39, \"div\", 3)(40, \"label\", 17)(41, \"b\");\n      i0.ɵɵtext(42, \"Longitude:\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(43, \"div\", 5)(44, \"input\", 18);\n      i0.ɵɵlistener(\"ngModelChange\", function HikesComponent_Template_input_ngModelChange_44_listener($event) {\n        return ctx.longitude = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(45, \"div\", 3)(46, \"label\", 19)(47, \"b\");\n      i0.ɵɵtext(48, \"Distance:\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(49, \"div\", 5)(50, \"input\", 20);\n      i0.ɵɵlistener(\"ngModelChange\", function HikesComponent_Template_input_ngModelChange_50_listener($event) {\n        return ctx.maxDistance = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(51, \"span\");\n      i0.ɵɵtext(52);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(53, HikesComponent_div_53_Template, 8, 2, \"div\", 21);\n      i0.ɵɵelementStart(54, \"div\", 3)(55, \"div\", 22)(56, \"div\", 23)(57, \"div\", 24);\n      i0.ɵɵelement(58, \"input\", 25);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(59, \"div\", 24)(60, \"button\", 26);\n      i0.ɵɵlistener(\"click\", function HikesComponent_Template_button_click_60_listener() {\n        return ctx.getLocation();\n      });\n      i0.ɵɵelement(61, \"fa-icon\", 27);\n      i0.ɵɵelementEnd()()()()()()();\n      i0.ɵɵtemplate(62, HikesComponent_div_62_Template, 2, 1, \"div\", 28);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(63, HikesComponent_div_63_Template, 9, 2, \"div\", 29);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngModel\", ctx.difficulty);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.difficulty);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.difficulty);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.difficulty);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedLocationId);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.locations);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.latitude);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.longitude);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.maxDistance);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"\", ctx.maxDistance, \" km\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.temperature);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"icon\", ctx.faMapMarker);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.trails.length != 0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.temperature);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.FaIconComponent, i5.ɵNgNoValidate, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.NumberValueAccessor, i5.RangeValueAccessor, i5.SelectControlValueAccessor, i5.RadioControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.NgModel, i5.NgForm],\n  styles: [\".wrapper[_ngcontent-%COMP%] {\\n    margin-top: 150px;\\n    display: flex;\\n    height: 80vh;\\n    justify-content: center;\\n    width: 100vw;\\n    gap: 15px;\\n}\\n\\n.left[_ngcontent-%COMP%] {\\n    background-color: lightblue;\\n    border-radius: 15px;\\n    padding: 15px;\\n    height: -moz-fit-content;\\n    height: fit-content;\\n    width: -moz-fit-content;\\n    width: fit-content;\\n\\n}\\n\\n.right[_ngcontent-%COMP%] {\\n    background-color: lightblue;\\n    border-radius: 15px;\\n    padding: 15px;\\n    width: 40%;\\n    overflow-y: scroll;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9oaWtlcy9oaWtlcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksaUJBQWlCO0lBQ2pCLGFBQWE7SUFDYixZQUFZO0lBQ1osdUJBQXVCO0lBQ3ZCLFlBQVk7SUFDWixTQUFTO0FBQ2I7O0FBRUE7SUFDSSwyQkFBMkI7SUFDM0IsbUJBQW1CO0lBQ25CLGFBQWE7SUFDYix3QkFBbUI7SUFBbkIsbUJBQW1CO0lBQ25CLHVCQUFrQjtJQUFsQixrQkFBa0I7O0FBRXRCOztBQUVBO0lBQ0ksMkJBQTJCO0lBQzNCLG1CQUFtQjtJQUNuQixhQUFhO0lBQ2IsVUFBVTtJQUNWLGtCQUFrQjtBQUN0QiIsInNvdXJjZXNDb250ZW50IjpbIi53cmFwcGVyIHtcbiAgICBtYXJnaW4tdG9wOiAxNTBweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGhlaWdodDogODB2aDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICB3aWR0aDogMTAwdnc7XG4gICAgZ2FwOiAxNXB4O1xufVxuXG4ubGVmdCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRibHVlO1xuICAgIGJvcmRlci1yYWRpdXM6IDE1cHg7XG4gICAgcGFkZGluZzogMTVweDtcbiAgICBoZWlnaHQ6IGZpdC1jb250ZW50O1xuICAgIHdpZHRoOiBmaXQtY29udGVudDtcblxufVxuXG4ucmlnaHQge1xuICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Ymx1ZTtcbiAgICBib3JkZXItcmFkaXVzOiAxNXB4O1xuICAgIHBhZGRpbmc6IDE1cHg7XG4gICAgd2lkdGg6IDQwJTtcbiAgICBvdmVyZmxvdy15OiBzY3JvbGw7XG59XG5cblxuXG5cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["faCloudSun","faLocationDot","i0","HikesComponent","constructor","http","service","ngOnInit","getLocations","subscribe","res","locations","onSubmit","getHikes","latitude","longitude","maxDistance","difficulty","hikes","trails","getWeather","trail","startingLatitude","startingLongitude","loading","temperature","current","temperature_2m","getDifficultyLabel","getLocation","console","log","onSelect","$event","selected","find","location","id","Number","longtitude","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/lucas/Documents/FRI/frontend/src/app/components/hikes/hikes.component.ts","/Users/lucas/Documents/FRI/frontend/src/app/components/hikes/hikes.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {faCloudSun} from \"@fortawesome/free-solid-svg-icons/faCloudSun\";\nimport {faLocationDot} from \"@fortawesome/free-solid-svg-icons/faLocationDot\";\nimport {ServiceService} from \"../../services/service.service\";\nimport {Hike} from \"../../models/Hike\";\n\ninterface Weather {\n    temperature: number;\n    humidity: number;\n    wind: number;\n    clouds: string;\n}\n\ninterface Location {\n    description: string;\n    food: boolean;\n    id: number;\n    latitude: number;\n    longitude: number;\n    name: string;\n    sleep: boolean;\n    toilets: boolean;\n}\n\n\n@Component({\n    selector: 'app-hikes',\n    templateUrl: './hikes.component.html',\n    styleUrls: ['./hikes.component.css']\n})\nexport class HikesComponent implements OnInit {\n    faCloud = faCloudSun;\n    faMapMarker = faLocationDot;\n    temperature: any;\n    difficulty = 1;\n    latitude = 0;\n    longitude = 0;\n    maxDistance = 0;\n    trails: Hike[] = [];\n    selectedTrail?: Hike;\n    weather?: Weather;\n    loading: boolean = false;\n    locations: Location[] = [];\n    selectedLocationId?: Number;\n\n    constructor(private http: HttpClient, private service: ServiceService) {\n    }\n\n    ngOnInit() {\n        this.service.getLocations().subscribe(res => this.locations = res);\n    }\n\n    onSubmit(): void {\n        this.service.getHikes(this.latitude, this.longitude, this.maxDistance, this.difficulty).subscribe((hikes: Hike[]) => {\n            this.trails = hikes;\n        });\n    }\n\n    getWeather(trail: Hike): void {\n        this.service.getWeather(trail.startingLatitude, trail.startingLongitude).subscribe(res => {\n            this.loading = true;\n            this.temperature = res.current.temperature_2m;\n            this.loading = false;\n\n        })\n    }\n\n    getDifficultyLabel(difficulty: number): string {\n        switch (difficulty) {\n            case 1:\n                return 'Easy';\n            case 2:\n                return 'Medium';\n            case 3:\n                return 'Hard';\n            case 4:\n                return 'Extreme';\n            default:\n                return 'Unknown';\n        }\n    }\n\n    getLocation() {\n        this.service.getLocations().subscribe(res => {\n            console.log(res);\n        });\n    }\n\n    onSelect($event: any) {\n        let selected = this.locations.find(location => location.id === Number($event))\n        if(selected) {\n            this.longitude = selected.longtitude;\n            this.latitude = selected.latitude;\n        }\n    }\n}\n","<div class=\"wrapper\">\n    <div class=\"left\">\n        <form (ngSubmit)=\"onSubmit()\" class=\"form-horizontal\">\n            <div class=\"form-group\">\n                <label for=\"difficulty\" class=\"col-sm-2 control-label\"><b>Difficulty:</b></label>\n                <div class=\"col-sm-10\">\n                    <!-- Use radio buttons for difficulty -->\n                    <div class=\"radio\">\n                        <label><input type=\"radio\" name=\"difficulty\" value=\"1\" [(ngModel)]=\"difficulty\"> Easy</label>\n                    </div>\n                    <div class=\"radio\">\n                        <label><input type=\"radio\" name=\"difficulty\" value=\"2\" [(ngModel)]=\"difficulty\"> Medium</label>\n                    </div>\n                    <div class=\"radio\">\n                        <label><input type=\"radio\" name=\"difficulty\" value=\"3\" [(ngModel)]=\"difficulty\"> Hard</label>\n                    </div>\n                    <div class=\"radio\">\n                        <label><input type=\"radio\" name=\"difficulty\" value=\"4\" [(ngModel)]=\"difficulty\"> Extreme</label>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"pointOfInterest\" class=\"col-sm-2 control-label\"><b>Locations:</b></label>\n                <div class=\"col-sm-10\">\n                    <select class=\"form-control\" id=\"pointOfInterest\" name=\"pointOfInterest\" (ngModelChange)=\"onSelect($event)\" [(ngModel)]=\"selectedLocationId\">\n                        <option value=\"\" disabled selected>Select</option>\n                        <option *ngFor=\"let location of locations\" [value]=\"location.id\">{{ location.name }}</option>\n                    </select>\n                </div>\n            </div>\n\n            <div class=\"form-group\">\n                <label for=\"latitude\" class=\"col-sm-2 control-label\"><b>Latitude:</b></label>\n                <div class=\"col-sm-10\">\n                    <input type=\"number\" class=\"form-control\" id=\"latitude\" name=\"latitude\" [(ngModel)]=\"latitude\">\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"longitude\" class=\"col-sm-2 control-label\"><b>Longitude:</b></label>\n                <div class=\"col-sm-10\">\n                    <input type=\"number\" class=\"form-control\" id=\"longitude\" name=\"longitude\" [(ngModel)]=\"longitude\">\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"maxDistance\" class=\"col-sm-2 control-label\"><b>Distance:</b></label>\n                <div class=\"col-sm-10\">\n                    <!-- Use a slider for maxDistance -->\n                    <input type=\"range\" class=\"form-control\" id=\"maxDistance\" name=\"maxDistance\" min=\"1\" max=\"100\" [(ngModel)]=\"maxDistance\">\n                    <span>{{ maxDistance }} km</span>\n                </div>\n            </div>\n            <div class=\"form-group\" *ngIf=\"temperature\">\n                <label for=\"temperature\" class=\"col-sm-2 control-label\"><b>Distance:</b></label>\n                <div class=\"col-sm-10\">\n                    <!-- Use a slider for maxDistance -->\n                    <input type=\"range\" class=\"form-control\" id=\"temperature\" name=\"temperature\" min=\"1\" max=\"100\" [(ngModel)]=\"maxDistance\">\n                    <span>{{ temperature}} C</span>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <div class=\"col-sm-12\">\n                    <!-- Use a row for the buttons -->\n                    <div class=\"row\">\n                        <!-- Use a column for each button -->\n                        <div class=\"col-sm-6\">\n                            <input type=\"submit\" class=\"btn btn-primary\" value=\"Search\" style=\"width: 100%\">\n                        </div>\n                        <div class=\"col-sm-6\">\n                            <button type=\"button\" class=\"btn btn-secondary\" style=\"margin-left: 0\" (click)=\"getLocation()\">\n                                <fa-icon [icon]=\"faMapMarker\"></fa-icon>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n    <div class=\"right\" *ngIf=\"trails.length != 0\">\n        <!-- Use a card component for each trail -->\n        <div *ngFor=\"let trail of trails\" class=\"card mb-3\">\n            <!-- Use a card header for the trail name -->\n            <div class=\"card-header bg-primary text-white\">\n                {{ trail.name }}\n            </div>\n            <!-- Use a card body for the trail details -->\n            <div class=\"card-body\">\n                <!-- Use a list group for the trail attributes -->\n                <ul class=\"list-group list-group-flush\" style=\"padding-bottom: 10px\">\n                    <li class=\"list-group-item\"><b>Difficulty:</b> {{ getDifficultyLabel(trail.difficulty) }}</li>\n                    <li class=\"list-group-item\"><b>Trail distance:</b> {{ trail.length }} m</li>\n                    <li class=\"list-group-item\"><b>Duration:</b> {{ trail.duration }} min</li>\n                </ul>\n                <!-- Use a button to open a modal for the weather -->\n                <button type=\"button\" class=\"btn btn-secondary\" data-toggle=\"modal\" data-target=\"#weatherModal\" (click)=\"getWeather(trail)\">\n                    <fa-icon [icon]=\"faCloud\"></fa-icon>\n                </button>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n\n<!-- Use a modal component for the weather -->\n<div class=\"modal fade\" id=\"weatherModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"weatherModalLabel\" aria-hidden=\"true\" *ngIf=\"temperature\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <!-- Use a modal header for the title -->\n            <!-- Use a modal body for the weather details -->\n            <div class=\"modal-body\">\n                <!-- Use a spinner for loading -->\n                <div class=\"spinner-border\" role=\"status\" *ngIf=\"loading\">\n                    <span class=\"sr-only\">Loading...</span>\n                </div>\n                <!-- Use a table for the weather data -->\n                <table class=\"table\" *ngIf=\"temperature\">\n                    <tbody>\n                    <tr>\n                        <th scope=\"row\">Temperature</th>\n                        <td>{{ temperature }} °C</td>\n                    </tr>\n                    </tbody>\n                </table>\n            </div>\n            <!-- Use a modal footer for the close button -->\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\">Close</button>\n            </div>\n        </div>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}